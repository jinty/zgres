; zgres config file
;
; Uses python's configparser syntax: https://docs.python.org/3/library/configparser.html
;
; You can edit this file directly or drop partial overrides in /etc/zgres/zgres.ini.d

[deadman]
; Configuration of the deadman daemon: Database setup, control, monitoring and registration process
;
; This is only used if you run the zgres-deadman process


; PARAM: plugins (required)
;
; 	plugins to use for the deadman process
;
;plugins=
; 	zgres#zookeeper
; 	zgres#apt
; 	zgres#ec2-snapshot
; 	zgres#ec2

[sync]
; Configuration of the sync daemon: keep database users up to date with info on the cluster
;
; This is only used if you run the zgres-sync process


; PARAM: plugins (required)
;
; 	plugins to use for the sync process
;
;plugins=zgres#zookeeper,zgres#zgres-apply

[zookeeper]
; ZooKeeper plugin configuration


; PARAM: connection_string (required)
;
; 	connect to zookeeper this comma separated list of host:port pairs
;
connection_string=localhost:2181

; PARAM: group (required)
;
; 	The database group to join
;
group=default

; PARAM: path (required)
;
; 	prefix operations in zookeeper with this prefix
;
path=/databases

[apt]
; Configuration for the Apt plugin: use postgresql APT packages (must be pre-installed from an APT repository, e.g. apt.postgresql.org)


; PARAM: postgresql_version (required)
;
; 	The postgresql version to use, APT packages providing this version must be pre-installed
;
postgresql_version=9.4

; PARAM: postgresql_cluster_name (required)
;
; 	postgresql cluster to use, if already exists, it will be removed/recreated
;
postgresql_cluster_name=zgres

; PARAM: initdb_options (optional)
;
; 	Extra options to be passed to initdb via pg_createcluster
;
;initdb_options=--data-checksums

; PARAM: config_dir (optional)
;
; 	Postgresql config files found in /etc/zgres will be copied into the
; 	postgresql configuration dir replacing any files already there. We need to
; 	have the config in a separate directory as pg_removecluster/pg_createcluster
; 	are used to init postgres
;
; 	for 9.4 these files are: environment  pg_ctl.conf  pg_hba.conf  pg_ident.conf  postgresql.conf  start.conf
;
;config_dir=/etc/zgres

; PARAM: postgresql.conf.* (optional)
;
; 	settings prefixed with "postgresql.conf." are set in postgresql.conf after the database has been inited
; 	here is an example of using wal-e to backup to an s3 bucket reusing the database group name set in the [zookeeper] section above
;
;postgresql.conf.archive_command=/usr/bin/wal-e --aws-instance-profile --s3-prefix s3://my_s3_bucket/${zookeeper:group} --terse wal-push "%p"

; PARAM: master.postgresql.conf.* (optional)
; PARAM: replica.postgresql.conf.* (optional)
; 	To set different postgresql config variables on master/replica, use this.
; 	NOTE: only config values which can be reset with a "reload" can be used here
;
;master.postgresql.conf.default_transaction_isolation=serializable
;replica.postgresql.conf.default_transaction_isolation=read committed

; PARAM: pg_indent.conf.{key} (optional)
; 	Lines to be added to pg_ident.conf after cluster initinaization. Lines will be ordered by the key.
; 	The key is also used to when overriding values in the configuration file. 
;
; 	the existing file will be prepended, replaced or appended depenending on the pg_ident.conf value
;
;pg_ident.conf.allow_root_as_postgres=
; 	root_as_postgres 	root 	postgres


; PARAM: pg_hba.conf.{key} (optional)
; 	Lines to be added to pg_hba.conf after cluster initinaization. Lines will be ordered by the key.
; 	The key is also used to when overriding values in the configuration file. 
;
; 	the existing file will be prepended, replaced or appended depenending on the pg_hba.conf value
;
;pg_hba.conf.allow_replication_from_subnet=
; 	host replication postgres 10.1.0.0/12 trust
; 	host replication postgres 10.100.0.0/12 trust

; PARAM: pg_indent.conf (optional, default:append)
; PARAM: pg_hba.conf (optional, default:append)
;
; 	Mode for modifying the named file, can be one of 'append', 'replace' or 'prepend'
;

; PARAM: superuser_connect_as (optional)
; PARAM: create_superuser (optional, default: False)
;
; 	This pluign requires superuser access to the database.
; 	There are 2 ways to achieve this:
; 		- set superuser_connect_as to "root" and set create_superuser to True which
; 	  	  will create a postgresql superuser "root" and connect as that user
; 		- modify pg_hba.conf and pg_ident.conf to allow the "root" user to connect as "postgres"
; 	  	  and set create_superuser to False and superuser_connect_as="postgres"
; superuser_connect_as=root
; create_superuser=True

; PARAM: restore_command (optional)
;
; 	Value to set the "restore_command" in recovery.conf for replicas
; 	
; restore_command=/usr/bin/wal-e --aws-instance-profile --s3-prefix s3://my_s3_bucket/${zookeeper:group} --terse wal-fetch "%f" "%p"

[ec2-snapshot]
; Configuration of the ec2-snapshot plugin: Backup and restore via EBS snapshots.
;
;
; 	This plugin performs backups and restores using ec2 snapshots. On the
; 	master, one or more EC2 volumes are snapshotted. Replicas will then
; 	create volumes from the most recent snapshots and mount them. Replicas
; 	then recover on startup and start replaying WAL files from the master.
;
;
; 	WARN: this MUST be acompanied by some form of WAL backup (e.g. https://github.com/wal-e/wal-e)
;
; 	This requries that all devices are present in /etc/fstab and are unused when postgresql is stopped
; 	Devices are orderd, they are unmounted in reverse order and mounted in order
;
; PARAM: dev.N.device (requried)
; PARAM: dev.N.iops (optional)
; PARAM: dev.N.size (optional)
; PARAM: dev.N.volume_type (optional)
;
; e.g 2 devices: one SSD with iops and a size, the other with the default options
;
; dev.1.device=/dev/sdf
; dev.1.iops=1000
; dev.1.size=300
; dev.1.volume_type=gp2
; dev.2.device=/dev/sdg
;
; NOTE: device name is the AMAZON name, not the one which it appears at on modern kernels (often /dev/xvdX)


; PARAM: tag.{tagname} (optional)
;
; Optional list of tags to add to the backup snapshot.

; PARAM: backup_interval (optional)
;
; Schedule backups spaced by this integer number of seconds. Note that this is the
; time between the end of one backup and the start of the next.
;
;For a daily backup:
;
;backup_interval=86400
